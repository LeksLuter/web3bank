const translations = {
  en: {
    "header-title": "Web3 Bank",
    "header-subtitle": "Your Gateway to the Funniest Decentralized Future!",
    "nav-home": "Home",
    "nav-why": "Why Us",
    "nav-tokenomics": "Tokenomics",
    "nav-use-cases": "Use Cases",
    "nav-roadmap": "Roadmap",
    "nav-listings": "Listings",
    "nav-partners": "Partners",
    "welcome-title": "Welcome to Web3 Bank",
    "welcome-text": "üî• Welcome to Web3 Bank ‚Äî Where Memes Meet Money! Say goodbye to boring finance! Join a decentralized community where every meme you create or share can earn you WTB tokens. Powered by blockchain, we turn laughter into real value. Start your journey today ‚Äî earn, vote, and build the future of meme-driven finance with us!",
    "why-title": "Why Web3 Bank?",
    "why-list": [
      "Earn While You Meme: Get rewarded with WTB tokens for every viral meme you share.",
      "Shape the Future: Vote on platform upgrades and meme contests with your tokens.",
      "Exclusive NFT Drops: Unlock limited-edition memes that can‚Äôt be found anywhere else.",
      "Community-Driven: Join 10,000+ memers building a decentralized economy together.",
      "Secure & Transparent: Built on blockchain ‚Äî no hidden fees, no middlemen."
    ],
    "tokenomics-title": "Tokenomics",
    "tokenomics-text": "Our tokenomics are designed to ensure fairness, sustainability, and long-term growth for our community. Join us and become part of the decentralized future!",
    "use-cases-title": "Token Use Cases",
    "use-cases-items": [
      "Meme Marketplace",
      "Buy, sell, and trade meme NFTs using WTB tokens. Earn royalties from viral memes!",
      "Decentralized Governance",
      "Vote for platform upgrades and meme contests with your WTB tokens.",
      "Meme Staking",
      "Stake WTB to boost meme visibility and earn rewards.",
      "Web3 Mem Games",
      "Play meme-based blockchain games and win WTB prizes.",
      "Meme Crowdfunding",
      "Fund your meme projects using WTB tokens and community support.",
      "Educational Memes",
      "Learn blockchain basics through interactive meme courses (paid in WTB)."
    ],
    "listings-title": "Token Listings",
    "listings-items": [
      "Trade WTB on Pump.Fun",
      "Track WTB metrics on DexScreener",
      "Check WTB price on DexTools",
      "Raydium listing (coming soon)",
      "CoinGecko listing (coming soon)"
    ],
    "partners-title": "Our Partners",
    "partners-items": [
      "Partner 1",
      "Partner 2",
      "Partner 3"
    ],
    "roadmap-title": "Roadmap",
    "roadmap-items": [
      "Launch WTB token on MMM platform",
      "Listing on decentralized exchanges (DEX)",
      "Listing on CoinGecko, CoinMarketCap",
      "Global marketing campaign",
      "Migration to multiple blockchains",
      "Development of Web3 Bank ecosystem projects"
    ],
    "how-title": "How It Works",
    "how-text": "1. Create your Web3 wallet.<br>2. Mint or trade WTB meme tokens.<br>3. Vote on the best memes to govern the platform.<br>4. Laugh your way to the top of the leaderboard!",
    "visit-counter": "Visits: {count}",
    "analytics-link": "View Analytics",
    "auth-title": "Sign In",
    "connect-fantom": "Connect with Fantom Wallet"
  },
  ru: {
    "header-title": "Web3 –ë–∞–Ω–∫",
    "header-subtitle": "–í–∞—à –ø—É—Ç—å –∫ —Å–∞–º–æ–º—É –≤–µ—Å–µ–ª–æ–º—É –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É –±—É–¥—É—â–µ–º—É!",
    "nav-home": "–ì–ª–∞–≤–Ω–∞—è",
    "nav-why": "–ü–æ—á–µ–º—É –º—ã",
    "nav-tokenomics": "–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞",
    "nav-use-cases": "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ",
    "nav-roadmap": "–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞",
    "nav-listings": "–õ–∏—Å—Ç–∏–Ω–≥–∏",
    "nav-partners": "–ü–∞—Ä—Ç–Ω–µ—Ä—ã",
    "welcome-title": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Web3 –ë–∞–Ω–∫",
    "welcome-text": "üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Web3 –ë–∞–Ω–∫ ‚Äî –≥–¥–µ –º–µ–º—ã –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è —Å –¥–µ–Ω—å–≥–∞–º–∏! –ó–∞–±—É–¥—å—Ç–µ –æ —Å–∫—É—á–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–∞—Ö! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–µ–º, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ –∏–ª–∏ –¥–µ–ª–∏—Ç–µ—Å—å, –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ç–æ–∫–µ–Ω—ã WTB. –ù–∞ –æ—Å–Ω–æ–≤–µ –±–ª–æ–∫—á–µ–π–Ω–∞ –º—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º —Å–º–µ—Ö –≤ —Ä–µ–∞–ª—å–Ω—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å. –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å —Å–µ–≥–æ–¥–Ω—è ‚Äî –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ, –≥–æ–ª–æ—Å—É–π—Ç–µ –∏ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –±—É–¥—É—â–µ–µ –º–µ–º-—ç–∫–æ–Ω–æ–º–∏–∫–∏ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏!",
    "why-title": "–ü–æ—á–µ–º—É Web3 –ë–∞–Ω–∫?",
    "why-list": [
      "–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π, –≤–µ—Å–µ–ª—è—Å—å: –ü–æ–ª—É—á–∞–π—Ç–µ —Ç–æ–∫–µ–Ω—ã WTB –∑–∞ –∫–∞–∂–¥—ã–π –≤–∏—Ä—É—Å–Ω—ã–π –º–µ–º.",
      "–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π: –ì–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∫–æ–Ω–∫—É—Ä—Å—ã –º–µ–º–æ–≤ —Å –ø–æ–º–æ—â—å—é —Ç–æ–∫–µ–Ω–æ–≤.",
      "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ NFT: –ü–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –º–µ–º–∞–º, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –±–æ–ª—å—à–µ –Ω–∏–≥–¥–µ.",
      "–°–æ–æ–±—â–µ—Å—Ç–≤–æ –∏–∑ 10,000+ –º–µ–º–µ—Ä–æ–≤: –í–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–µ–º –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —ç–∫–æ–Ω–æ–º–∏–∫—É.",
      "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±–ª–æ–∫—á–µ–π–Ω–∞: –ù–∏–∫–∞–∫–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–∏—Å—Å–∏–π –∏ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤."
    ],
    "tokenomics-title": "–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞",
    "tokenomics-text": "–ù–∞—à–∞ —Ç–æ–∫–µ–Ω–æ–º–∏–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏, —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –±—É–¥—É—â–µ–≥–æ!",
    "use-cases-title": "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞",
    "use-cases-items": [
      "–ú–µ–º-–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å",
      "–ü–æ–∫—É–ø–∞–π—Ç–µ, –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ –∏ –æ–±–º–µ–Ω–∏–≤–∞–π—Ç–µ –º–µ–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ NFT —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–æ–≤ WTB. –ü–æ–ª—É—á–∞–π—Ç–µ —Ä–æ—è–ª—Ç–∏ –æ—Ç –≤–∏—Ä—É—Å–Ω—ã—Ö –º–µ–º–æ–≤!",
      "–î–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
      "–ì–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –º–µ–º-–∫–æ–Ω–∫—É—Ä—Å—ã —Å –ø–æ–º–æ—â—å—é —Ç–æ–∫–µ–Ω–æ–≤ WTB.",
      "–°—Ç–µ–π–∫–∏–Ω–≥ –º–µ–º–æ–≤",
      "–°—Ç–µ–π–∫–∞–π—Ç–µ WTB –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –º–µ–º–æ–≤ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥.",
      "Web3-–∏–≥—Ä—ã —Å –º–µ–º–∞–º–∏",
      "–ò–≥—Ä–∞–π—Ç–µ –≤ –±–ª–æ–∫—á–µ–π–Ω-–∏–≥—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ–º–æ–≤ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ WTB!",
      "–ö—Ä–∞—É–¥—Ñ–∞–Ω–¥–∏–Ω–≥ –º–µ–º–æ–≤",
      "–§–∏–Ω–∞–Ω—Å–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ –º–µ–º-–ø—Ä–æ–µ–∫—Ç—ã —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω—ã WTB –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.",
      "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ–º—ã",
      "–ò–∑—É—á–∞–π—Ç–µ –æ—Å–Ω–æ–≤—ã –±–ª–æ–∫—á–µ–π–Ω–∞ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –º–µ–º-–∫—É—Ä—Å—ã (–æ–ø–ª–∞—Ç–∞ –≤ WTB)."
    ],
    "listings-title": "–õ–∏—Å—Ç–∏–Ω–≥–∏ —Ç–æ–∫–µ–Ω–∞",
    "listings-items": [
      "–¢–æ—Ä–≥—É–π—Ç–µ WTB –Ω–∞ Pump.Fun",
      "–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ WTB –Ω–∞ DexScreener",
      "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ü–µ–Ω—É WTB –Ω–∞ DexTools",
      "–õ–∏—Å—Ç–∏–Ω–≥ –Ω–∞ Raydium (—Å–∫–æ—Ä–æ)",
      "–õ–∏—Å—Ç–∏–Ω–≥ –Ω–∞ CoinGecko (—Å–∫–æ—Ä–æ)"
    ],
    "partners-title": "–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã",
    "partners-items": [
      "–ü–∞—Ä—Ç–Ω–µ—Ä 1",
      "–ü–∞—Ä—Ç–Ω–µ—Ä 2",
      "–ü–∞—Ä—Ç–Ω–µ—Ä 3"
    ],
    "roadmap-title": "–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞",
    "roadmap-items": [
      "–ó–∞–ø—É—Å–∫ —Ç–æ–∫–µ–Ω–∞ WTB –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ MMM",
      "–õ–∏—Å—Ç–∏–Ω–≥ –Ω–∞ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –±–∏—Ä–∂–∞—Ö (DEX)",
      "–õ–∏—Å—Ç–∏–Ω–≥ –Ω–∞ CoinGecko, CoinMarketCap",
      "–ì–ª–æ–±–∞–ª—å–Ω–∞—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è",
      "–ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–ª–æ–∫—á–µ–π–Ω–æ–≤",
      "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ Web3 Bank"
    ],
    "how-title": "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç",
    "how-text": "1. –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π Web3 –∫–æ—à–µ–ª–µ–∫.<br>2. –ß–µ–∫–∞–Ω—å—Ç–µ –∏–ª–∏ —Ç–æ—Ä–≥—É–π—Ç–µ —Ç–æ–∫–µ–Ω–∞–º–∏ WTB.<br>3. –ì–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ –ª—É—á—à–∏–µ –º–µ–º—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π.<br>4. –°–º–µ–π—Ç–µ—Å—å –¥–æ –≤–µ—Ä—à–∏–Ω—ã –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞!",
    "visit-counter": "–ü–æ—Å–µ—â–µ–Ω–∏—è: {count}",
    "analytics-link": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É",
    "auth-title": "–í–æ–π—Ç–∏",
    "connect-fantom": "–ü–æ–¥–∫–ª—é—á–∏—Ç—å Fantom Wallet"
  }
};

let currentLanguage = "en";

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
function toggleLanguage() {
  currentLanguage = currentLanguage === "en" ? "ru" : "en";
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞
  const flag = document.getElementById("language-flag");
  flag.src = currentLanguage === "en" 
    ? "img/usa-flag.svg" 
    : "img/russia-flag.svg";
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  Object.keys(translations[currentLanguage]).forEach(key => {
    const element = document.getElementById(key);
    if (element) {
      element.textContent = translations[currentLanguage][key];
    }
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤
  const whyList = document.getElementById("why-list");
  whyList.innerHTML = translations[currentLanguage]["why-list"]
    .map(item => `<li>${item}</li>`)
    .join("");

  const useCases = document.querySelectorAll(".use-case-card h3, .use-case-card p");
  const useCaseItems = translations[currentLanguage]["use-cases-items"];
  useCases.forEach((el, index) => {
    el.textContent = useCaseItems[index];
  });

  const listings = document.querySelectorAll(".exchange-card p");
  const listingItems = translations[currentLanguage]["listings-items"];
  listings.forEach((el, index) => {
    el.textContent = listingItems[index];
  });

  const roadmapItems = document.querySelectorAll(".roadmap-item p");
  roadmapItems.forEach((el, index) => {
    el.textContent = translations[currentLanguage]["roadmap-items"][index];
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
  const visits = localStorage.getItem("visits") || 0;
  const counterText = translations[currentLanguage]["visit-counter"].replace("{count}", visits);
  document.getElementById("visit-counter").textContent = counterText;
}

// –ú–µ–Ω—é
function toggleMenu() {
  const navbar = document.getElementById("navbar");
  navbar.classList.toggle("active");
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É (–º–æ–±–∏–ª—å–Ω—ã–µ)
  document.querySelectorAll(".nav-links a").forEach(link => {
    link.addEventListener("click", () => {
      if (window.innerWidth <= 768) {
        navbar.classList.remove("active");
      }
    });
  });
}

// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
let loggedInUser = null;

function showModal() {
  document.getElementById("auth-modal").classList.remove("hidden");
  document.getElementById("modal-overlay").classList.remove("hidden");
}

function hideModal() {
  document.getElementById("auth-modal").classList.add("hidden");
  document.getElementById("modal-overlay").classList.add("hidden");
}

async function connectFantom() {
  if (window.fantom) {
    const accounts = await window.fantom.enable();
    alert(`Connected: ${accounts[0]}`);
    hideModal();
  } else {
    alert("Fantom Wallet –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω!");
  }
}

// –ö–≤–µ—Å—Ç—ã
const adminPassword = "web3bank2025";
const quests = localStorage.getItem("quests") 
  ? JSON.parse(localStorage.getItem("quests"))
  : [];

function login() {
  const wallet = document.getElementById("wallet-address").value;
  if (!wallet) return alert("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞!");
  loggedInUser = { wallet, tasks: [] };
  updateUserInfo();
  hideModal();
}

function updateUserInfo() {
  const userCard = document.querySelector(".user-card");
  if (userCard) {
    userCard.classList.remove("hidden");
    document.getElementById("user-wallet").textContent = loggedInUser.wallet;
    document.getElementById("tasks-completed").textContent = loggedInUser.tasks.length;
  }
}

function addQuest() {
  const title = document.getElementById("new-quest-title").value;
  const points = document.getElementById("new-quest-points").value;
  if (!title || !points) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
  quests.push({ title, points });
  localStorage.setItem("quests", JSON.stringify(quests));
  alert("–ó–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!");
}

function loadQuests() {
  const questsList = document.getElementById("quests-list");
  quests.forEach(quest => {
    const item = `
      <details>
        <summary>${quest.title}</summary>
        <p>Points: ${quest.points}</p>
        <button onclick="completeQuest('${quest.title}')">Complete</button>
      </details>
    `;
    questsList.innerHTML += item;
  });
}
loadQuests();

function completeQuest(title) {
  if (!loggedInUser) return alert("–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å!");
  loggedInUser.tasks.push(title);
  updateUserInfo();
}

// –ê–¥–º–∏–Ω–∫–∞
function adminLogin() {
  const pass = document.getElementById("admin-pass").value;
  if (pass === adminPassword) {
    document.getElementById("admin-panel").classList.remove("hidden");
    document.getElementById("admin-pass").classList.add("hidden");
  }
}

function logoutAdmin() {
  document.getElementById("admin-panel").classList.add("hidden");
  document.getElementById("admin-pass").classList.remove("hidden");
}

// –°—á–µ—Ç—á–∏–∫ –ø–æ—Å–µ—â–µ–Ω–∏–π
function updateVisitCounter() {
  let visits = localStorage.getItem("visits");
  visits = visits ? parseInt(visits) + 1 : 1;
  localStorage.setItem("visits", visits);
  const counterText = translations[currentLanguage]["visit-counter"].replace("{count}", visits);
  document.getElementById("visit-counter").textContent = counterText;
}
updateVisitCounter();
