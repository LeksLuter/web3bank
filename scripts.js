// –û–±—ä–µ–∫—Ç –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const translations = {
  en: {
    "header-title": "Web3 Bank",
    "header-subtitle": "Your Gateway to the Funniest Decentralized Future!",
    "welcome-title": "Welcome to Web3 Bank",
    "welcome-text": "üî• Welcome to Web3 Bank ‚Äî Where Memes Meet Money! Say goodbye to boring finance! Join a decentralized community where every meme you create or share can earn you WTB tokens. Powered by blockchain, we turn laughter into real value. Start your journey today ‚Äî earn, vote, and build the future of meme-driven finance with us!",
    "why-title": "Why Web3 Bank?",
    "why-list": [
      "Earn While You Meme: Get rewarded with WTB tokens for every viral meme you share.",
      "Shape the Future: Vote on platform upgrades and meme contests with your tokens.",
      "Exclusive NFT Drops: Unlock limited-edition memes that can‚Äôt be found anywhere else.",
      "Community-Driven: Join 10,000+ memers building a decentralized economy together.",
      "Secure & Transparent: Built on blockchain ‚Äî no hidden fees, no middlemen."
    ],
    "tokenomics-title": "Tokenomics",
    "tokenomics-text": "Our tokenomics are designed to ensure fairness, sustainability, and long-term growth for our community. Join us and become part of the decentralized future!",
    "use-cases-title": "Token Use Cases",
    "listings-title": "Token Listings",
    "partners-title": "Our Partners",
    "roadmap-title": "Roadmap",
    "how-title": "How It Works",
    "how-text": "1. Create your Web3 wallet.<br>2. Mint or trade WTB meme tokens.<br>3. Vote on the best memes to govern the platform.<br>4. Laugh your way to the top of the leaderboard!",
    "visit-counter": "Visits: {count}",
    "analytics-link": "View Analytics",
    "nav-home": "Home",
    "nav-why": "Why Us",
    "nav-tokenomics": "Tokenomics",
    "nav-use-cases": "Use Cases",
    "nav-roadmap": "Roadmap",
    "nav-listings": "Listings",
    "nav-partners": "Partners",
    "auth-title": "Sign In",
    "connect-fantom": "Connect with Fantom Wallet"
  },
  ru: {
    "header-title": "Web3 –ë–∞–Ω–∫",
    "header-subtitle": "–í–∞—à –ø—É—Ç—å –∫ —Å–∞–º–æ–º—É –≤–µ—Å–µ–ª–æ–º—É –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É –±—É–¥—É—â–µ–º—É!",
    "welcome-title": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Web3 –ë–∞–Ω–∫",
    "welcome-text": "üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Web3 –ë–∞–Ω–∫ ‚Äî –≥–¥–µ –º–µ–º—ã –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è —Å –¥–µ–Ω—å–≥–∞–º–∏! –ó–∞–±—É–¥—å—Ç–µ –æ —Å–∫—É—á–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–∞—Ö! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–µ–º, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ –∏–ª–∏ –¥–µ–ª–∏—Ç–µ—Å—å, –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ç–æ–∫–µ–Ω—ã WTB. –ù–∞ –æ—Å–Ω–æ–≤–µ –±–ª–æ–∫—á–µ–π–Ω–∞ –º—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º —Å–º–µ—Ö –≤ —Ä–µ–∞–ª—å–Ω—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å. –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å —Å–µ–≥–æ–¥–Ω—è ‚Äî –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ, –≥–æ–ª–æ—Å—É–π—Ç–µ –∏ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –±—É–¥—É—â–µ–µ –º–µ–º-—ç–∫–æ–Ω–æ–º–∏–∫–∏ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏!",
    "why-title": "–ü–æ—á–µ–º—É Web3 –ë–∞–Ω–∫?",
    "why-list": [
      "–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π, –≤–µ—Å–µ–ª—è—Å—å: –ü–æ–ª—É—á–∞–π—Ç–µ —Ç–æ–∫–µ–Ω—ã WTB –∑–∞ –∫–∞–∂–¥—ã–π –≤–∏—Ä—É—Å–Ω—ã–π –º–µ–º.",
      "–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π: –ì–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∫–æ–Ω–∫—É—Ä—Å—ã –º–µ–º–æ–≤ —Å –ø–æ–º–æ—â—å—é —Ç–æ–∫–µ–Ω–æ–≤.",
      "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ NFT: –ü–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –º–µ–º–∞–º, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –±–æ–ª—å—à–µ –Ω–∏–≥–¥–µ.",
      "–°–æ–æ–±—â–µ—Å—Ç–≤–æ –∏–∑ 10,000+ –º–µ–º–µ—Ä–æ–≤: –í–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–µ–º –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —ç–∫–æ–Ω–æ–º–∏–∫—É.",
      "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±–ª–æ–∫—á–µ–π–Ω–∞: –ù–∏–∫–∞–∫–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–∏—Å—Å–∏–π –∏ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤."
    ],
    "tokenomics-title": "–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞",
    "tokenomics-text": "–ù–∞—à–∞ —Ç–æ–∫–µ–Ω–æ–º–∏–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏, —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –±—É–¥—É—â–µ–≥–æ!",
    "use-cases-title": "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞",
    "listings-title": "–õ–∏—Å—Ç–∏–Ω–≥–∏ —Ç–æ–∫–µ–Ω–∞",
    "partners-title": "–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã",
    "roadmap-title": "–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞",
    "how-title": "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç",
    "how-text": "1. –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π Web3 –∫–æ—à–µ–ª–µ–∫.<br>2. –ß–µ–∫–∞–Ω—å—Ç–µ –∏–ª–∏ —Ç–æ—Ä–≥—É–π—Ç–µ –º–µ–º-—Ç–æ–∫–µ–Ω–∞–º–∏.<br>3. –ì–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ –ª—É—á—à–∏–µ –º–µ–º—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π.<br>4. –°–º–µ–π—Ç–µ—Å—å –¥–æ –≤–µ—Ä—à–∏–Ω—ã –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞!",
    "visit-counter": "–ü–æ—Å–µ—â–µ–Ω–∏—è: {count}",
    "analytics-link": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É",
    "nav-home": "–ì–ª–∞–≤–Ω–∞—è",
    "nav-why": "–ü–æ—á–µ–º—É –º—ã",
    "nav-tokenomics": "–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞",
    "nav-use-cases": "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ",
    "nav-roadmap": "–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞",
    "nav-listings": "–õ–∏—Å—Ç–∏–Ω–≥–∏",
    "nav-partners": "–ü–∞—Ä—Ç–Ω–µ—Ä—ã",
    "auth-title": "–í–æ–π—Ç–∏",
    "connect-fantom": "–ü–æ–¥–∫–ª—é—á–∏—Ç—å Fantom Wallet"
  }
};

let currentLanguage = "en";

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
function toggleLanguage() {
  currentLanguage = currentLanguage === "en" ? "ru" : "en";
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞
  const flag = document.getElementById("language-flag");
  flag.src = currentLanguage === "en"
    ? "img/usa-flag.svg"
    : "img/russia-flag.svg";
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  Object.keys(translations[currentLanguage]).forEach(key => {
    const element = document.getElementById(key);
    if (element) element.textContent = translations[currentLanguage][key];
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤
  const whyList = document.getElementById("why-list");
  whyList.innerHTML = translations[currentLanguage]["why-list"]
    .map(item => `<li>${item}</li>`)
    .join("");

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Use Cases
  const useCases = document.querySelectorAll(".use-case-card h3, .use-case-card p");
  const useCaseItems = translations[currentLanguage]["use-cases-items"];
  useCases.forEach((el, index) => {
    el.textContent = useCaseItems[index];
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Listings
  const listings = document.querySelectorAll(".exchange-card p");
  const listingItems = translations[currentLanguage]["listings-items"];
  listings.forEach((el, index) => {
    el.textContent = listingItems[index];
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Roadmap
  const roadmapItems = document.querySelectorAll(".roadmap-item p");
  roadmapItems.forEach((el, index) => {
    el.textContent = translations[currentLanguage]["roadmap-items"][index];
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
  const visits = localStorage.getItem("visits") || 0;
  const counterText = translations[currentLanguage]["visit-counter"].replace("{count}", visits);
  document.getElementById("visit-counter").textContent = counterText;
}

// –ú–µ–Ω—é
function toggleMenu() {
  const navbar = document.getElementById("navbar");
  navbar.classList.toggle("active");

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É (–º–æ–±–∏–ª—å–Ω—ã–µ)
  document.querySelectorAll(".nav-links a").forEach(link => {
    link.addEventListener("click", () => {
      if (window.innerWidth <= 768) {
        navbar.classList.remove("active");
      }
    });
  });
}

// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
function showModal() {
  document.getElementById("auth-modal").classList.remove("hidden");
  document.getElementById("modal-overlay").classList.remove("hidden");
}

function hideModal() {
  document.getElementById("auth-modal").classList.add("hidden");
  document.getElementById("modal-overlay").classList.add("hidden");
}

document.getElementById("modal-overlay").addEventListener("click", hideModal);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Fantom Wallet
async function connectFantom() {
  if (window.fantom) {
    const accounts = await window.fantom.enable();
    alert(`Connected: ${accounts[0]}`);
    hideModal();
  } else {
    alert("Fantom Wallet –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω!");
  }
}

// –°—á–µ—Ç—á–∏–∫ –ø–æ—Å–µ—â–µ–Ω–∏–π
function updateVisitCounter() {
  let visits = localStorage.getItem("visits");
  visits = visits ? parseInt(visits) + 1 : 1;
  localStorage.setItem("visits", visits);
  
  const counterText = translations[currentLanguage]["visit-counter"].replace("{count}", visits);
  document.getElementById("visit-counter").textContent = counterText;
}
updateVisitCounter();
